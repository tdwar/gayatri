public class InsecureApexClass {

    // Vulnerable method with SOQL Injection
    public static List<Account> getAccountsByName(String accountName) {
        // This is a common security flaw - directly using user input in a dynamic SOQL query
        String query = 'SELECT Id, Name FROM Account WHERE Name LIKE \'%' + accountName + '%\'';
        return Database.query(query);
    }

    // Insecure method for handling user passwords
    public static void storeUserPassword(Id userId, String password) {
        // Weak hashing practice - storing passwords without proper hashing and salting
        User u = [SELECT Id, Password__c FROM User WHERE Id = :userId];
        u.Password__c = password; // Storing plaintext password (insecure)
        update u;
    }

    // Insecure method with weak encryption
    public static String encryptData(String data) {
        // Example of weak encryption
        Blob dataBlob = Blob.valueOf(data);
        Blob encryptedBlob = Crypto.encryptWithManagedIV('AES128', Crypto.generateAesKey(128), dataBlob);
        return EncodingUtil.base64Encode(encryptedBlob);
    }

    // Insecure method with improper input validation
    public static void processUserData(String userData) {
        // Not validating or sanitizing user input
        System.debug('Processing user data: ' + userData);
    }
}
